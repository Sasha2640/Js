// array - –º–∞—Å—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–Ω–∏—Ö —ñ –º–∞–Ω—ñ–ø—É–ª—é–≤–∞–Ω–Ω—è —ó–π
// –º–æ–∂—É—Ç—å –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø—Ä–∏–º—ñ—Ç–∏–≤—ñ –¥–∞–Ω–Ω–∏—Ö (—Ä—è–¥–∫–∏,—á–∏—Å–ª–∞...)

// –ó–Ω–∞–π—Ç–∏ –æ—Å—Ç–∞–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// const fruits = ["apple", "peach", "pear", "banana"];

// // Change code below this line
// const lastElementIndex = fruits.length - 1;
// const lastElement = fruits[lastElementIndex];
// let arr1 = [];
// const clients = ["Mango", "Poly", "Kate"];
// console.log("üöÄ ~ clients:", clients);
// console.log(clients[1]); // Poly
// console.log(clients[0]); // Mango

// –ü–µ—Ä–µ–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
// clients[0] = "Kiwi";
// console.log("üöÄ ~ clients:", clients);
// // –î–æ–¥–∞–≤–∞–Ω–Ω—è
// clients[3] = "Alex";
// console.log("üöÄ ~ clients:", clients);
// // –î–æ–≤–∂–∏–Ω–∞ –º–∏—Å—Å–∏–≤—É
// console.log(clients.length); // 4

// clients.length = 5
// console.log(clients); // –¥–æ–¥–∞—î –ø—É—Å—Ç–µ –º—ñ—Å—Ü–µ
// console.log(clients[5]); // –∞–ª–µ –π–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ

// clients.length = 2
// console.log(clients); // —Å—Ç–µ—Ä–ª–æ—Å—è —ñ –∑–∞–ª–∏—à–∏–ª–æ—Å—å 2 –µ–ª–µ–º–µ–Ω—Ç–∞

// –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É
// for

// for (let i = 0; i < clients.length; i += 1) {
//   console.log("index client", i);
//   console.log("client", clients[i]);
// }

// –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –¥–∞–Ω–Ω–∏–º–∏ –º–∞—Å—Å–∏–≤
// const numbers = [];

// for (let i = 0; i < 3; i += 1) {
//   numbers.push(`element-${i}`);
// }
// console.log("üöÄ ~ numbers:", numbers);

// for..of - –ø–µ—Ä–µ–±–∏—Ä–∞—î –µ–ª–µ–º–µ–Ω—Ç–∏, —Ç—ñ–ª–æ —Ü–∏–∫–ª—É –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
// –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ (–¥–æ–±—Ä–∏–π, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω
// –¥–æ—Å—Ç—É–ø –ø–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ )

// for (const element of object) {
// —Ç—ñ–ª–æ
// }
// —ñ—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É
// for (const client of clients) {
//     console.log("üöÄ ~ client:", client)
// }
// —ñ—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ —Ä—è–¥–∫—É
// const string = "javascript";
// for (const bukva of string) {
//     console.log("üöÄ ~ bukva:", bukva)

// }

// break —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è

// const clientNameToFind = "Pol";
// let message = "Client not find";

// for (const client of clients) {
//   if (client === clientNameToFind) {
//     message = "Client find";
//     break;
//   }
//   // message = 'Client not find'
// }
// console.log(message);

// continue —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è

// const numbs = [1, 3, 14, 35, 2, 7, 345, 89];
// const max = 15;
// const maxNum = [];

// for (const number of numbs) {
//   if (number < max) {
//     continue;
//   }
//   console.log("–ë—ñ–ª—å—à–µ –Ω—ñ–∂ –º–∞—Ö", number);
//   maxNum.push(number);
// }
// console.log("üöÄ ~ maxNum:", maxNum);

//TODO: ‚Ññ 1 ==============================================================
//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é logItems(array), —è–∫–∞ –ø—Ä–∏–π–º–∞—î
//–º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for, —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ
//–µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ
//<–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>
//–ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.
// ['–î–∂–∞–∑', '–ë–ª—é–∑', '–†–æ–∫-–Ω-—Ä–æ–ª', '–†–µ–≥–≥—ñ', '–†–µ–ø']
// const musici = ["–î–∂–∞–∑", "–ë–ª—é–∑", "–†–æ–∫-–Ω-—Ä–æ–ª", "–†–µ–≥–≥—ñ", "–†–µ–ø"];
// function logItems(musici) {
//   for (let i = 0; i < musici.length; i += 1) {
//     console.log(`${i + 1} - ${musici[i]}`);
//   }
// }
// logItems(musici);
//TODO: ‚Ññ 2  for...of ============================================================
//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findSmallerNumber(numbers)
//—è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ –≤ –º–∞—Å–∏–≤—ñ.
// const numbers = [2, 5, 35, 56, 12, 1, 7, 80, 3];
// const numbrs = [2, 5, 35, 56, 12, 1, 7, 80, 3];
// function findSmallerNumber(numbrs) {
//   // for (const numberss of numbrs) {
//   //   let smallest = numberss[0];
//   //   for (let i = 1; i < numbrs.length; i += 1) {
//   //     if (numbrs[i] < smallest) {
//   //       smallest = numbrs[i];
//   //     }
//   //   }
//   //   return smallest;
//   // }
//   let smallest = numbrs[0];
//   for (const numbr of numbrs) {
//     if (smallest > numbr) {
//       smallest = numbr;
//     }
//   }
//   return smallest;
// }
// console.log("–ù–∞–π–º–µ–Ω—à–µ", findSmallerNumber(numbrs));

// function checkString(string) {
//   let isCheck;
//   if (string && 0) {
//     isCheck = false;
//   } else {
//     isCheck = true;
//   }
//   return isCheck;
// }
// console.log(checkString("true || false"));

// –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—é —Ç–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–Ω—é

// –ø–æ –∑–Ω–∞—á—á–µ–Ω–Ω—é –¥–ª—è –ø—Ä–æ—Å—Ç–∏—Ö
let a = 5;
// –∑—Ä–æ–±–∏–º–æ —â–µ –æ–¥–Ω—É –∑–º—ñ–Ω–Ω—É —ñ —Å—Ç–≤–æ—Ä–∏–º–æ —â–µ –æ–¥–Ω—É —è—á–µ–π–∫—É –≤ –ø–∞–º—è—Ç—ñ
let b = a;
// console.log("üöÄ ~ a:", a);
// console.log("üöÄ ~ b:", b);

// –ø–æ–º—ñ–Ω—è—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∞
a = 10;
// b –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–º—ñ–Ω—è–ª–æ—Å—å
// console.log("üöÄ ~ a:", a);
// console.log("üöÄ ~ b:", b);

// –ø–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—é –¥–ª—è —Å–∫–ª–∞–¥–Ω–∏—Ö —Ç–∏–ø—ñ–≤
const c = ["Mango"];
// –∑—Ä–æ–±–∏–º–æ —â–µ –æ–¥–Ω—É –∑–º—ñ–Ω–Ω—É —ñ —Å—Ç–≤–æ—Ä–∏–º–æ —â–µ –æ–¥–Ω—É —è—á–µ–π–∫—É –≤ –ø–∞–º—è—Ç—ñ
const d = c;
// console.log("üöÄ ~ c:", c);
// console.log("üöÄ ~ d:", d);
// –¥–æ–¥–∞–º–æ —â–æ—Å—å –≤ c
c.push("qweqwe");
// console.log("üöÄ ~ c:", c);
// –≤ d —î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏–π –º–∞—Å—Å–∏–≤
// console.log("üöÄ ~ d:", d);

d.push("abc");
// console.log("üöÄ ~ c:", c);
// console.log("üöÄ ~ d:", d);

// –ú–µ—Ç–æ–¥–∏ –º–∞—Å—Å–∏–≤—É ===================================================================

// split(—Ä–∞–∑–¥–µ–ª—ñ—Ç–µ–ª—å) - –¥–æ–∑–≤–æ–ª—è—î –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ —Ä—è–¥–æ–∫ –≤ –º–∞—Å—Å–∏–≤, —Ä–∞–∑–±–∏–≤
// —ó—ó –ø–æ —Ä–∞–∑–¥–µ–ª—ñ—Ç–µ–ª—é :)
const hello = "Hello world, people";
console.log(hello.split(" "));

const arrayHello = hello.split(" ");
// console.log(hello.split(""));

//join(—Ä–∞–∑–¥–µ–ª—ñ—Ç–µ–ª—å) - –±–µ—Ä–µ –º–∞—Å—Å–∏–≤ —ñ –∑—î–¥–Ω—é—î –π–æ–≥–æ –≤ —Ä—è–¥–æ–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ä–∞–∑–¥–µ–ª—ñ—Ç–µ–ª—å

console.log(arrayHello.join(" "));
console.log(arrayHello.join(","));
console.log(arrayHello.join("_"));

// indexOf(index) - –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à–∏–π —ñ–Ω–¥–µ–∫—Å –≤ —è–∫–æ–º—É —î –µ–ª–µ–º–µ–Ω—Ç, —è–∫—â–æ –Ω–µ
// –∑–Ω–∞–π—à–æ–≤, —Ç–æ –ø–æ–≤–µ—Ä–Ω–µ -1

console.log(hello.indexOf("world"));
console.log(hello.indexOf("hey"));

// includes(boolean) - –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª—å, —á–∏ –º–∞—î –≤–∏—à—É–∫—Ñ–≤–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –º–∞—Å—Å–∏–≤

console.log(hello.includes("world"));
console.log(hello.includes("hey"));

// push() - –¥–æ–¥–∞—î –Ω–∞ –∫—ñ–Ω–µ—Ü—å –º–∞—Å—Å–∏–≤—É

arrayHello.push("qweqwe");
console.log(arrayHello);
// pop() - –ø—Ä–∏–±–∏—Ä–∞—î –∑ –∫—ñ–Ω—Ü—è –º–∞—Å—Å–∏–≤—É
arrayHello.pop("qweqwe");
console.log(arrayHello);
// unshift() - –¥–æ–¥–∞—î –Ω–∞ –ø–æ—á–∞—Ç–∫—É –º–∞—Å—Å–∏–≤—É
arrayHello.unshift("qweqwe");
console.log(arrayHello);
// shift() - –ø—Ä–∏–±–∏—Ä–∞—î –Ω–∞ –ø–æ—á–∞—Ç–∫—É –º–∞—Å—Å–∏–≤—É
arrayHello.shift("qweqwe");
console.log(arrayHello);

// slice() - –¥–ª—è —Ä—è–¥–∫—ñ–≤ —Ç–∞ –º–∞—Å–∏–≤—ñ–≤.
// slice(begin, end) - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, begin - –≤—ñ–¥  , end - –¥–æ (–∞–ª–µ –Ω–µ –≤–∫–ª—é—á–∞—é—á–∏)
// –Ω–µ –∑–º—ñ–Ω—é—î –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å—Å–∏–≤, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ–ø—ñ—é

const clients = ["Mango", "ajax", "Poly", "Kiwi", "Kasper"];
// console.log(clients.slice(1, 3));
// console.log(clients.slice());
// console.log(clients.slice(1));
// console.log(clients.slice(-2));

// splice() - –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª—è—Ç–∏, –¥–æ–¥–∞–≤–∞—Ç–∏, —ñ –∑–∞–º—ñ–Ω—è—Ç–∏
// –∑–º—ñ–Ω—é—î –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å—Å–∏–≤
// splice(position, num) - position - –ø–æ–∑–∏—Ü—ñ—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É –¥–ª—è –≤–∏–¥–∞–ª—è–Ω–Ω—è
// num - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è

const scores = [1, 2, 3, 4, 5];
// const deleteScores = scores.splice(0, 3);
// –∑–º—É—Ç—É–≤–∞–≤ –Ω–∞—à –º–∞—Å—Å–∏–≤
console.log(scores); // [4,5]
// –Ω–µ –º—É—Ç—É—é—á–∏–π –º–µ—Ç–æ–¥ toSplice()
const toDeleteSplice = scores.toSpliced(0, 3);
console.log(scores); // [4,5]
// –∑–∞–ª–∏—à–∏–ª–∏—Å—å –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
console.log("üöÄ ~ toDeleteSplice:", toDeleteSplice);
// console.log("üöÄ ~ deleteScores:", deleteScores);

// splice-–¥–æ–¥–∞–≤–∞–Ω–Ω—è
// —Å–∏–Ω—Ç–∞–∫—Å–∏—Å splice(position, 0, new_el_1, new_el_2, ...)
// position - –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –≤ –º–∞—Å–∏–≤—ñ, –¥–µ –±—É–¥—É—Ç—å –¥–æ–¥–∞–≤–∞—Ç–∏—Å—å –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
// 0 - –≤—ñ–Ω –∫–∞–∂–µ –º–µ—Ç–æ–¥—É –Ω–µ –≤–∏–¥–∞–ª—è—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// new_el_1 - —Ü–µ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —è–∫—ñ –≤—Å—Ç–∞–≤–ª—è—é—Ç—å –≤ –º–∞—Å—Å–∏–≤
const colors = ["red", "blue", "green"];
colors.splice(2, 0, "purple");
colors.splice(3, 0, "black", "yellow");
console.log(colors);

// splice-–∑–∞–º—ñ–Ω–∞ - –¥–æ–¥–∞—î –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç, –æ–¥–Ω–æ—á–∞—Å–Ω–æ –≤–∏–¥–∞–ª—è—é —ñ–Ω—à–∏–π
// —Å–∏–Ω—Ç–∞–∫—Å–∏—Å splice(position, 1, new_el_1, new_el_2, ...)
// position - –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –≤ –º–∞—Å–∏–≤—ñ, –¥–µ –±—É–¥—É—Ç—å –¥–æ–¥–∞–≤–∞—Ç–∏—Å—å –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
// 1 - –≤—ñ–Ω –∫–∞–∂–µ –º–µ—Ç–æ–¥—É —è–∫–∏–π —Ç—Ä–µ–±–∞ –≤–∏–¥–∞–ª—è—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç
// new_el_1 - —Ü–µ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —è–∫—ñ –≤—Å—Ç–∞–≤–ª—è—é—Ç—å –≤ –º–∞—Å—Å–∏–≤

const languages = ["C", "C+", "JS", "Java"];
languages.splice(1, 1, "Python");
console.log(languages);
languages.splice(2, 1, "C#", "Go", "PHP");
console.log(languages);

// concat() - –ø–æ—î–¥–Ω—é—î –¥–≤–∞ –∞–±–æ –±—ñ–ª—å—à–µ –º–∏—Å—Å–∏–≤—ñ–≤, –Ω–µ –º—É—Ç—É—é—á–∏–π
// array_1.concat(array_2)
const total = colors.concat(languages);
console.log("üöÄ ~ total:", total);

// –ó–∞–¥–∞—á–∫–∞ –Ω–∞ slice
// –û–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatMessage(message, maxLength), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ (–ø–∞—Ä–∞–º–µ—Ç—Ä message) —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –π–æ–≥–æ –¥–æ–≤–∂–∏–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –∑–∞–¥–∞–Ω–æ—ó –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä maxLength).

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ:

// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞ –¥–æ—Ä—ñ–≤–Ω—é—î –∞–±–æ –º–µ–Ω—à–∞ –∑–∞ maxLength, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—è–¥–æ–∫ –±–µ–∑ –∑–º—ñ–Ω.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ –ø–µ—Ä–µ–≤–∏—â—É—î maxLength, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä—ñ–∑–∞—î —Ä—è–¥–æ–∫ –¥–æ maxLength —Å–∏–º–≤–æ–ª—ñ–≤, –¥–æ–¥–∞—î —Ç—Ä–∏–∫—Ä–∞–ø–∫—É "..." –≤ –∫—ñ–Ω—Ü—ñ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±—Ä—ñ–∑–∞–Ω—É –≤–µ—Ä—Å—ñ—é.
// console.log(formatMessage("Curabitur ligula sapien", 16)); // "Curabitur ligula..."
// console.log(formatMessage("Curabitur ligula sapien", 23)); // "Curabitur ligula sapien"
// console.log(formatMessage("Vestibulum facilisis purus nec", 20)); // "Vestibulum facilisis..."
// console.log(formatMessage("Vestibulum facilisis purus nec", 30)); // "Vestibulum facilisis purus nec"
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 15)); // "Nunc sed turpis..."
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 41)); // "Nunc sed turpis a felis in nunc fringilla"

// function formatMessage(message, maxLength) {
//   if (message.length <= maxLength) {
//     return message;
//   } else {
//     return message.slice(0, maxLength) + "...";
//   }
// }

// –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É üëá

// –ó–∞–¥–∞—á–∫–∞ –Ω–∞ includes
// –§—É–Ω–∫—Ü—ñ—è checkForSpam(message) –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ (–ø–∞—Ä–∞–º–µ—Ç—Ä message), –ø–µ—Ä–µ–≤—ñ—Ä—è—î –π–æ–≥–æ –Ω–∞ –≤–º—ñ—Å—Ç –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–ª—ñ–≤ spam —ñ sale, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏. –°–ª–æ–≤–∞ –≤ —Ä—è–¥–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ message –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤ –¥–æ–≤—ñ–ª—å–Ω–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ SPAM –∞–±–æ sAlE.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ:

// –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ (spam –∞–±–æ sale), —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª—å true
// –Ø–∫—â–æ –≤ —Ä—è–¥–∫—É –≤—ñ–¥—Å—É—Ç–Ω—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω—ñ —Å–ª–æ–≤–∞, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª—å false

// function checkForSpam(message) {
//   message = message.toLowerCase();
//   if (message.includes("spam") || message.includes("sale")) {
//     return true;
//   } else {
//     return false;
//   }
// return message.toLowerCase().includes("spam") ||
// message.toLowerCase().includes("sale");
// }

// // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É üëá
// console.log(checkForSpam("Latest technology news")); // false
// console.log(checkForSpam("JavaScript weekly newsletter")); // false
// console.log(checkForSpam("Get best sale offers now!")); // true
// console.log(checkForSpam("Amazing SalE, only tonight!")); // true
// console.log(checkForSpam("Trust me, this is not a spam message")); // true
// console.log(checkForSpam("Get rid of sPaM emails. Our book in on sale!")); // true
// console.log(checkForSpam("[SPAM] How to earn fast money?")); // true

// TODO ‚Ññ 1 ==========================
// –ü–µ—Ä—à, –Ω—ñ–∂ —Ä–æ–∑–≤‚Äô—è–∑—É–≤–∞—Ç–∏ –∑–∞–¥–∞—á—É, –¥–∞–≤–∞–π –≤–∏–∑–Ω–∞—á–∏–º–æ—Å—è —ñ–∑ –Ω–æ–≤–∏–º —Ç–µ—Ä–º—ñ–Ω–æ–º!

// –¢–µ—Ä–º—ñ–Ω slug ‚Äî —Ü–µ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –ª—é–¥–∏–Ω—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É –≤–µ–± —Ä–æ–∑—Ä–æ–±—Ü—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∏—Ç–∞–±–µ–ª—å–Ω–∏—Ö URL-–∞–¥—Ä–µ—Å.

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞–º—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–±–∞—á–∏–≤ –≤ –∞–¥—Ä–µ—Å–Ω–æ–º—É —Ä—è–¥–∫—É mysite.com/posts/1q8fh74tx, –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ slug —ñ–∑ –Ω–∞–∑–≤–∏ —Å—Ç–∞—Ç—Ç—ñ. –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –∞–¥—Ä–µ—Å–∞ –±—É–¥–µ –ø—Ä–∏—î–º–Ω—ñ—à–æ—é –¥–ª—è mysite.com/posts/arrays-for-beginners.

// Slug ‚Äî —Ü–µ –∑–∞–≤–∂–¥–∏ —Ä—è–¥–æ–∫ —É –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Å–ª–æ–≤–∞ —è–∫–æ–≥–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.

// –ó —Ü–∏–º —Ä–æ–∑—ñ–±—Ä–∞–ª–∏—Å—è? –ê —Ç–µ–ø–µ—Ä –¥–∞–≤–∞–π –Ω–∞—Ä–µ—à—Ç—ñ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–¥–∞—á—É!

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é slugify(title), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—Ç—ñ, –ø–∞—Ä–∞–º–µ—Ç—Ä title —ñ –ø–æ–≤–µ—Ä—Ç–∞—î slug, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —ñ–∑ —Ü—å–æ–≥–æ —Ä—è–¥–∫–∞.

// –ó–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ title –±—É–¥—É—Ç—å —Ä—è–¥–∫–∏, —Å–ª–æ–≤–∞ —è–∫–∏—Ö —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ª–∏—à–µ –ø—Ä–æ–±—ñ–ª–∞–º–∏.
// –£—Å—ñ —Å–∏–º–≤–æ–ª–∏ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤ –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ.
// –£—Å—ñ —Å–ª–æ–≤–∞ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.
// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.
// function slugify(title) {
//   title = title.toLowerCase();
//   const text = title.split(" ");
//   return text.join("-");
//   return title.toLowerCase().split(" ").join("-");
// }

// console.log(slugify("English for developer"));
// // "english-for-developer"
// console.log(slugify("Ten secrets of JavaScript")); // "ten-secrets-of-javascript"
// console.log(slugify("How to become a JUNIOR developer in TWO WEEKS")); // "how-to-become-a-junior-developer-in-two-weeks"
// ODO ‚Ññ 2 ==========================================
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø—ñ–¥ –Ω–∞–∑–≤–æ—é makeArray, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: firstArray (–º–∞—Å–∏–≤), secondArray (–º–∞—Å–∏–≤) —ñ maxLength (—á–∏—Å–ª–æ). –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ firstArray, –∞ –ø–æ—Ç—ñ–º —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ secondArray.

// –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –Ω–æ–≤–æ–º—É –º–∞—Å–∏–≤—ñ –ø–µ—Ä–µ–≤–∏—â—É—î maxLength, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –∑ –¥–æ–≤–∂–∏–Ω–æ—é maxLength –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.
// –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤–µ—Å—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤.
// function makeArray(array1, array2, maxLength) {
//   let finalArray = array1.concat(array2);
//   if (finalArray.length > maxLength) {
//     return finalArray.slice(0, maxLength);
//   } else {
//     return finalArray.slice();
//   }
// }
// console.log(makeArray(["Mango", "Poly"], ["Ajax", "Chelsea"], 3));
// // –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.

// console.log(makeArray(["Mango", "Poly"], ["Ajax", "Chelsea"], 3)); // ["Mango", "Poly", "Ajax"]
// console.log(makeArray(["Mango", "Poly", "Houston"], ["Ajax", "Chelsea"], 4)); // ["Mango", "Poly", "Houston", "Ajax"]
// console.log(makeArray(["Mango"], ["Ajax", "Chelsea", "Poly", "Houston"], 3)); // ["Mango", "Ajax", "Chelsea"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 2)); // ["Earth", "Jupiter"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 4)); // ["Earth", "Jupiter", "Neptune", "Uranus"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus", "Venus"], 0)); // []

// TODO ‚Ññ 3 ============================================
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filterArray(numbers, value), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª (numbers) —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è (value) —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –ª–∏—à–µ —Ç–∏—Ö —á–∏—Å–µ–ª —ñ–∑ –º–∞—Å–∏–≤—É numbers, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è value.

// –£—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

// –°—Ç–≤–æ—Ä–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, —É —è–∫–∏–π –±—É–¥–µ—à –¥–æ–¥–∞–≤–∞—Ç–∏ –ø—ñ–¥—Ö–æ–¥—è—â—ñ —á–∏—Å–ª–∞.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª –¥–ª—è —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É numbers.
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —É–º–æ–≤–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä if —É—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ü–∏–∫–ª—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –ü–æ–≤–µ—Ä–Ω–∏ —Å–≤—ñ–π –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –ø—ñ–¥—Ö–æ–¥—è—â–∏–º–∏ —á–∏—Å–ª–∞–º–∏ —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

function filterArray(numbers, value) {
  const finalNumbers = [];
  for (const number of numbers) {
    if (number > value) {
      finalNumbers.push(number);
    }
  }
  return finalNumbers;
}
// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.
console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]
