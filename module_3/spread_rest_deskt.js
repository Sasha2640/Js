// Spread - ... —Ä–∞—Å–ø–∏–ª–µ–Ω–Ω—è, –¥–æ–∑–≤–æ–ª—è—î —Ä–∞—Å–ø–∏–ª–∏—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ —ñ–Ω—à—É
// –∫–æ–ª–µ–∫—Ü—ñ—é, –∑—Ä–æ–±–∏–≤ –∫–æ–ø—ñ—é –Ω–µ –º—ñ–Ω—è—é—á–∏ —ó—ó

// –ú–∞—Å–∏–≤–≤–∏ —Ä–æ–∑–ø–∏–ª–µ–Ω–Ω—è ========================================

const tempreatures = [15, 34, 54, 12, 34, 54];
console.log("üöÄ ~ tempreatures:", tempreatures);
// Math –Ω–µ –ø—Ä–∞—Ü—é—î –∑ –º–∞—Å—Å–∏–≤–∞–º–∏ ===============
const min = Math.min(tempreatures);
console.log("üöÄ ~ min:", min); // NaN
const a = [...tempreatures];
console.log(tempreatures === a); // false - —Ä—ñ–∑–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
console.log("üöÄ ~ a:", a);
// –∞ –∑ —Ä—è–¥–∫–∞–º–∏ –ø—Ä–∞—Ü—é—î –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é spread ===========
const minSpread = Math.min(...tempreatures);
console.log("üöÄ ~ minSpread:", minSpread); // 12

// –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç —ñ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –±–µ–∑ –Ω—å–æ–≥–æ
const tempreaturesDel = [...tempreatures, 22];
console.log("üöÄ ~ tempreaturesDel:", tempreaturesDel);

// –û–±—å–µ–¥–Ω–∞–Ω–Ω—è –º–∞—Å—Å–∏–≤—ñ–≤ ================
const array1 = ["Mango", "Poly", "qweqwe"];
const array2 = ["Alex", "Ajax", "123"];

const newArray = [...array1, ...array2];
console.log("üöÄ ~ newArray:", newArray);
// –ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑ –º–µ—Ç–æ–¥–∞–º–∏ –º–∞—Å–∏–≤—ñ–≤ —Ä–∞–∑–æ–º
const someArray = [...array1.slice(0, 2), ...array2.slice(1)];
console.log("üöÄ ~ someArray:", someArray);

// –û–±—å–µ–∫—Ç–∏, —Ä–æ–∑–ø–∏–ª–µ–Ω–Ω—è =====================================

const b = { x: 1, y: 2 };
const c = { x: 0, z: 3 };

const d = { ...b, ...c };
console.log("üöÄ ~ d:", d);

// —Å—Ç–≤–æ—Ä–∏–º–æ —Ö–∏–º–µ—Ä—É :)
const lion = { hasTail: true, legs: 4 };
const eagle = { canFly: true };

const chimera = { ...lion, ...eagle };
console.log("üöÄ ~ chimera:", chimera);

// Rest - –æ–±—å–µ–¥–Ω–∞–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –¥–æ –º–∞—Å–∏–≤—É ================================

function add(...args) {
  console.log(args);
}

add(1, 2, 3);
add(1, 2, 3, 4, 5, 6);

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ–∑–∞—Ü—ñ—è - –∑–º—ñ–Ω–Ω–∏–º –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ {—Å–∫–æ–±–æ–∫} –Ω–∞–¥–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –æ–±—å–µ–∫—Ç–∞
// –ü—Ä–∏—Å–≤–æ—é–≤–∞–Ω–Ω—è –∫–æ–ª–∏ –∫–ª—é—á —Å —Ç–∞–∫–æ—é —Å–∞–º–æ—é –Ω–∞–∑–≤–æ—é —è–∫ –∑–º—ñ–Ω–Ω–∞

const hotel = {
  name: "NameHotel",
  stars: 5,
  capacity: 100,
};
console.log(hotel.name, hotel.stars, hotel.capacity);

// —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (–∑–∞–ø–∏—Å)
// const { name, stars, capacity, status } = hotel;
// console.log(name, stars, capacity, status);

// –¥–æ–¥–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ status
const { name, stars, capacity, status = "nice" } = hotel;
console.log((name, stars, capacity, status));

// –ø–µ—Ä–µ–ø—Ä–∏—Å–≤–æ—ó—Ç–∏ –∫–ª—é—á –∑ –Ω–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º
// const {name: hotelName, stars, }

//TODO: ‚Ññ 1 ==============================================================
// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç—ã
//–Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã
//–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å—É–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞—Ä–ø–ª–∞—Ç –∏
//—Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum.
//–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç salaries –ø—É—Å—Ç, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0

// -—Å—É–º—É–≤–∞—Ç–∏; –≤—Å—ñ; –∑–∞—Ä–ø–ª–∞—Ç–∏
// - –¥–æ–¥–∞—Ç–∏; —É–º–æ–≤–∏, —â–æ; —è–∫—â–æ; salaries; –ø—É—Å—Ç–∏–π; —Ç–æ–¥—ñ; –π–æ–≥–æ; –∑–Ω–∞—á–µ–Ω–Ω—è; –¥–æ—Ä—ñ–≤–Ω—é—î; 0;
// -–≤–∏–≤–µ—Å—Ç–∏; —Ä–µ–∑—É–ª—å—Ç–∞—Ç; –≤; –∫–æ–Ω—Å–æ–ª—å;

const salaries = {
  Mango: 100,
  Poly: 160,
  Ajax: 1470,
};

// let keys = Object.values(salaries);

// function sumSalary(keys) {
//   let sum = 0;

//   for (const salary of keys) {
//     sum += salary;
//   }
//   console.log(sum);
// }
// sumSalary(keys);
// - short version
// let sum = 0;
// for (const value of Object.values(salaries)) {
//   sum += value;
// }
// console.log(sum);

//TODO: ‚Ññ 2 ===============================================================
// –ü–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ key —Ç–∞ obj,
// —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç–∏ –æ–±'—î–∫—Ç
// –Ø–∫—â–æ —É –æ–±'—î–∫—Ç–∞ —î —Ç–∞–∫–∏–π –∫–ª—é—á - –ø–æ–≤–µ—Ä–Ω–µ true

// const obj = {
//   name: "Igor",
//   car: "Mercedes",
//   carColor: "black",
// };
// console.log(getBool(obj, "car"));

// function getBool(obj, key) {
//   for (const keys in obj) {
//     if (key === keys) {
//       return true;
//     }
//   }
//   return false;
// }
//- short variant
// function getBool(obj, key) {
//   return key in obj;
// return Object.keys(obj).includes(key);
// }

//TODO: ‚Ññ 3 ==============================================================
// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é multiplyNumeric(obj),
// —è–∫–∞ –º–Ω–æ–∂–∏—Ç—å –≤—Å—ñ —á–∏—Å–ª–æ–≤—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞ obj –Ω–∞ 2

let menu = {
  width: 200,
  height: 300,
  title: "My menu",
};
// let valuess = Object.values(menu);
// console.log("üöÄ ~ valuess:", valuess);

// function multiplyNumeric(valuess) {
//   for (const value of valuess) {
//     let numbers = 0;
//     let perevirka = typeof value;
//     console.log("üöÄ ~ multiplyNumeric ~ perevirka:", perevirka);

//     if (perevirka === "number") {
//       numbers = value * 2;
//     }
//     return numbers;
//   }
// }
// function multiplyNumeric(obj) {
//   for (const key in obj) {
//     if (obj.hasOwnProperty(key)) {
//       if (typeof obj[key] === "number") {
//         obj[key] *= 2;
//       }
//     }
//   }
//   return obj;
// }
// console.log(multiplyNumeric(menu));
// const animals = ["cat", "dog"];
// animals.length = 0;
// console.log(animals[0]);
// console.log([1, 2, 3] === [1, 2, 3]);
// let a = 10;
// const b = a;
// a = 21;
// console.log(a === b);
